## pre-scriptum: –≤ –°—Ç–∏–ª—è—Ö Notepad++ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ —Ü–≤–µ—Ç STRINGEOL, —á—Ç–æ–±—ã –æ—Ç–ª–∏—á–∞—Ç—å –º–æ–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ ##, –≤ PyCharm –¥–ª—è —ç—Ç–æ–≥–æ –Ω–∞–¥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª —Ü–≤–µ—Ç–æ–≤–æ–π —Å—Ö–µ–º—ã

## ==========  1  ========== ##

from math import sqrt

class Tetrahedron:
    def __init__(self, ab, bc, ac, ad, bd, cd):
        """–ö–æ–ª - –≤–æ —Ä–µ–±–µ—Ä —Ç–µ—Ç—Ä–∞—ç–¥—Ä–∞"""
        ## ü°π —Å—Ç—Ä–æ–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞–∑–º–µ—â–µ–Ω—ã –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–æ–π –ü–û–î –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –∫–ª–∞—Å—Å–∞/—Ñ—É–Ω–∫—Ü–∏–∏
        ## ü¢É —Ñ–æ—Ä–º—É–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –Ω–∏–∂–µ, –≤–µ—Ä–Ω—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ç–µ—Ç—Ä–∞—ç–¥—Ä–∞,
        ##     –∞ —ç—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–∞–¥–∞—Ç—å –¥–ª–∏–Ω—É —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ–≥–æ —Ä–µ–±—Ä–∞
        self.ab = ab
        self.bc = bc
        self.ac = ac
        self.ad = ad
        self.bd = bd
        self.cd = cd
    
    ## –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–∏–∑—É–∞–ª—å–Ω–æ –æ—Ç–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –º–µ—Ç–æ–¥—ã –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞ –æ–¥–Ω–æ–π –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π 
    def height(self):
        """–§–æ—Ä–º—É–ª–∞ –≤—ã—Å–æ—Ç—ã"""  ## –≤—Å—ë-—Ç–∞–∫–∏ –º–µ—Ç–æ–¥ ‚Äî —ç—Ç–æ –Ω–µ —Ñ–æ—Ä–º—É–ª–∞
        h = sqrt((2 * self.ad) / 3)
        return h
    
    def square(self, a, b, c):
        """–§–æ—Ä–º—É–ª–∞ –ø–ª–æ—â–∞–¥–∏ —Ä–µ–±—Ä–∞"""  ## —Ä–µ–±—Ä–æ ‚Äî —ç—Ç–æ –æ—Ç—Ä–µ–∑–æ–∫, –æ–Ω –Ω–µ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –ø–ª–æ—â–∞–¥—å; 
                                     ## —Ä–µ—á—å —è–≤–Ω–æ –æ –≥—Ä–∞–Ω–∏
        ## —ç—Ç–æ –ø–æ–ª—É–ø–µ—Ä–∏–º–µ—Ç—Ä
        item = (a + b + c) / 2
        ## –∞ —ç—Ç–æ –∫–∞–∫ —Ä–∞–∑ –ø–ª–æ—â–∞–¥—å
        per = sqrt(item * (item - a) * (item - b) * (item - c)) 
        return per
    
    def full_square(self):
        """–§–æ—Ä–º—É–ª–∞ –ø–ª–æ—â–∞–¥–∏ —Ç–µ—Ç—Ä–∞—ç–¥—Ä–∞"""
        ## –≥—Ä–∞–Ω–∏
        Rebro1 = self.square(self.ab, self.bc, self.ac)
        Rebro2 = self.square(self.ab, self.ad, self.bc)
        Rebro3 = self.square(self.bc, self.bd, self.cd)
        Rebro4 = self.square(self.ac, self.ad, self.cd)
        return (Rebro1 + Rebro2 + Rebro3 + Rebro4)

    def full_volume(self):
        """–§–æ—Ä–º—É–ª–∞ –æ–±—ä–µ–º–∞ —Ç–µ—Ç—Ä–∞—ç–¥—Ä–∞"""
        return self.square(self.ab, self.bc, self.ac) * self.height()


    ## –≤ —Ü–µ–ª–æ–º, –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –≤–µ—Ä–Ω–æ–µ
    ## –Ω–∞ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—É:
    ##   —Å–µ–π—á–∞—Å —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–∑–º–µ–Ω–∏—Ç—å –¥–ª–∏–Ω—É —Ä—ë–±–µ—Ä –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞, –∏ –º–µ—Ç–æ–¥—ã
    ##   –∫–∞–∂–¥—ã–π —Ä–∞–∑ –≤—ã—á–∏—Å–ª—è—é—Ç –∑–Ω–∞—á–µ–Ω–∏—è –∑–∞–Ω–æ–≤–æ ‚Äî —ç—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –¥–ª—è –∏–∑–º–µ–Ω—è–µ–º—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤, 
    ##   –Ω–æ –¥–∞–∂–µ –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ —Å—Ç–æ–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –º–µ—Ç–æ–¥–æ–≤, —Å —Ç–µ–º, —á—Ç–æ–±—ã –æ–Ω–∏ 
    ##   –∑–∞–ø–æ–º–∏–Ω–∞–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—ã—á–∏—Å–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ 
    ##   –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞
    ##   –Ω–æ –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–π –æ–±—ä–µ–∫—Ç, —Ç–æ —Å—Ç–æ–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è —Ä–∞–∑–æ–≤–æ–π 
    ##   –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–ª–µ–π –∏ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä–∞–∑–æ–≤–æ–≥–æ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π ‚Äî 
    ##   —ç—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–∞–∫–∏–µ –æ–±—ä–µ–∫—Ç—ã —Å –∑–∞–º–µ—Ç–Ω–æ –±–æ–ª—å—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é


## –¥–ª—è —Ç–∞–∫–æ–≥–æ —Ç–µ—Ç—Ä–∞—ç–¥—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –≤–∞–º–∏ —Ñ–æ—Ä–º—É–ª—ã –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç
t = Tetrahedron(4, 5, 6, 7, 8, 3)
## —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ:
## t = Tetrahedron(4, 4, 4, 4, 4, 4)
print(f"–ü–ª–æ—â–∞–¥—å —Ç–µ—Ç—Ä–∞—ç–¥—Ä–∞: {t.full_square()}")
print(f"–û–±—ä–µ–º —Ç–µ—Ç—Ä–∞—ç–¥—Ä–∞: {t.full_volume()}")



## ==========  2  ========== ## 

from datetime import datetime, timedelta, time

class WhichTime:
    def __init__(self, u=0):
        ## –º–µ—Ç–æ–¥ now() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Ä–µ–º—è –≤ —Ç–µ–∫—É—â–µ–º (–¥–ª—è –û–°) —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ, –∞ –Ω–µ –ø–æ –ì—Ä–∏–Ω–≤–∏—á—É
        ##   —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤—Ä–µ–º—è –ø–æ –ì—Ä–∏–Ω–≤–∏—á—É –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ utcnow()
        self.now = datetime.now()
        ## –∏–º–µ–Ω–∞ –∞—Ç—Ä–∏–±—É—Ç–æ–≤ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–Ω–∞—á–∞—â–∏–º–∏: utc_offset –Ω–∞–ø—Ä–∏–º–µ—Ä
        self.u = u
        ## –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∏–∂–µ
        ## self.__periods = ('—É—Ç—Ä–æ', '–¥–µ–Ω—å', '–≤–µ—á–µ—Ä', '–Ω–æ—á—å')

    ## —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –ª–∏—à–Ω–∏–º
    def Clock(self):
        pertime = self.now + timedelta(hours=self.u)
        ## —É —Ç–∏–ø–∞ datetime –µ—Å—Ç—å –∞—Ç—Ä–∏–±—É—Ç hour ‚Äî –Ω–µ—Ç –Ω—É–∂–¥—ã –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –º–µ—Ç–æ–¥–æ–º time()
        return pertime.time().hour
    
    ## –≤ Titlecase –∏ CamelCase –ø–∏—à—É—Ç –∏–º–µ–Ω–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤, 
    ##   –¥–ª—è –∏–º—ë–Ω –º–µ—Ç–æ–¥–æ–≤ –∏—Å–ø–æ–ª—å–∑—É—é—Ç lowercase –∏–ª–∏ snake_case
    def Period(self):
        ## –∏–º—è i ‚Äî –¥–ª—è –∏–Ω–¥–µ–∫—Å–æ–≤
        i = self.Clock()
        ## –≤–º–µ—Å—Ç–æ –º–µ—Ç–æ–¥–∞ Clock()
        ## h = (self.now + timedelta(hours=self.u)).hour
        ## —Ç–µ–ø–µ—Ä—å –≤ —á–∞—Å –Ω–æ—á–∏ –±—É–¥—É –≤–∞–º –ø–∏—Å–∞—Ç—å "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ!" =–™
        if 0 <= i < 6:
            print('—É—Ç—Ä–æ')
        elif 6 <= i < 12:
            print('–¥–µ–Ω—å')
        elif 12 <= i < 18:
            print('–≤–µ—á–µ—Ä')
        elif 18 <= i < 24:
            print('–Ω–æ—á—å')
        ## –Ω–æ —Ä–∞–∑ —É–∂ —Ä–µ—à–∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–∞–∫–∏–µ —Ä–æ–≤–Ω—ã–µ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–∏, —Ç–æ –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ:
        ## print(self.__periods[h//6])


    ## –Ω–µ —Å—á–∏—Ç–∞—è –æ–¥–Ω–æ–≥–æ –ª–∏—à–Ω–µ–≥–æ –º–µ—Ç–æ–¥–∞, –∫–ª–∞—Å—Å –≤—ã—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
    ## –Ω–æ –≤ —Ü–µ–ª–æ–º, –µ–¥–≤–∞ –ª–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–¥–æ–±–Ω–æ–≥–æ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–≤–∞—Ç—å 
    ##   –∏ —Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞
    ## —Ç–∞–∫ —á—Ç–æ –≤ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–µ –¥–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å —è–≤–Ω–æ —Å—Ç–æ–∏—Ç –ø–µ—Ä–µ–ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å: 
    ##   –ø–æ–¥—É–º–∞–π—Ç–µ, –∫–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º ‚Äî –µ—Å—Ç—å –µ—â—ë –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–æ—Å–æ–±–æ–≤


t1 = WhichTime(int(input('–í–≤–µ–¥–∏—Ç–µ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å (UTC): ')))
t1.Period()
